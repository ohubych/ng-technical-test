# This worflow is triggered each time a pr is merged into master or releases :
#   - create builds to send to s3 to download later to sign or to be picked up by another pipeline for automatic signing

name: CI PUSH

on:
    push:
        branches:
            - master
            - releases/**
        paths-ignore: # Don't trigger on files that are updated by the CI
            - package.json
            - package-lock.json

jobs:
    #########################################################################################################################
    #                                           AUTOMATIC VERSION BUMP
    #########################################################################################################################

    auto-version-bump:
        runs-on: ubuntu-18.04

        steps:
            # Always use v2 to be able to push to protected branches
            - name: Check out Git repository
              uses: actions/checkout@v2
              with:
                  persist-credentials: false
            - name: Upgrade NPM Version
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  npm version patch -m "Upgrade to v%s"
            - name: Get Branch Name
              shell: bash
              run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//\//g')" >> $GITHUB_ENV
            - name: Push Upgrade to Branch
              uses: ad-m/github-push-action@master
              with:
                  branch: ${{ env.BRANCH_NAME }}
                  github_token: ${{ secrets.ADMINTOKEN }}

    #########################################################################################################################
    #                                           BUILD FOR WEB
    #########################################################################################################################

    build-web:
        runs-on: ubuntu-latest

        needs: [auto-version-bump]

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v2

            - name: Install librairies for Linux
              run: sudo apt-get install fakeroot rpm

            - name: Install Librairies for Javascript
              uses: actions/setup-node@v1
              with:
                  node-version: 12.14
              env:
                  RUNNER_TEMP: /tmp

            - name: Fix problem with ec-key
              run: yarn config set ignore-engines true

            - name: Get Branch Name and Version
              shell: bash
              run: |
                  echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
                  git pull origin ${{ env.BRANCH_NAME }}
                  echo "PACKAGE_VERSION=$(echo $(grep -m1 version package.json | awk -F: '{ print $2 }' | sed 's/[", ]//g'))" >> $GITHUB_ENV

            - name: Install project dependencies
              run: yarn install

            - name: Build app for Web
              run: |
                  ./scripts/build/build-web.sh
                  ./scripts/generate-secrets.sh ${{ secrets.FUSIONCHARTS_LICENSE_KEY }}
                  ./scripts/build/package-web.sh

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: "eu-central-1"

            - name: Deploy Web binaries to S3 bucket
              run: >
                  aws s3 cp ./out/tg-trade-gui-frontoffice-client-web-${{  env.PACKAGE_VERSION  }}.zip
                  s3://${{ secrets.AWS_S3_BUCKET }}/taurusgroup/tg-trade-gui-frontoffice/v${{  env.PACKAGE_VERSION  }}/web/tg-trade-gui-frontoffice-client-web-v${{  env.PACKAGE_VERSION  }}.zip
